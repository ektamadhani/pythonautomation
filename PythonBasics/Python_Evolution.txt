1. Sum of Numbers
Given two integers a and b, which can be positive or negative, find the sum of all the numbers between including them too and return it. 
If the two numbers are equal return a or b.

Note: a and b are not ordered!

get_sum(1, 0) == 1   // 1 + 0 = 1
get_sum(1, 2) == 3   // 1 + 2 = 3
get_sum(0, 1) == 1   // 0 + 1 = 1
get_sum(1, 1) == 1   // 1 Since both are same
get_sum(-1, 0) == -1 // -1 + 0 = -1
get_sum(-1, 2) == 2  // -1 + 0 + 1 + 2 = 2

ans:1
def get_sum(a,b):
    largest=max(a,b)
    smallest=min(a,b)
    if a==b:
        return a
    else:
        sum=0
        for x in range(smallest,largest+1):
          sum+=x
        return sum
print (get_sum(1,0))
print (get_sum(1,2))
print (get_sum(1,1))
print (get_sum(-1,2))
print (get_sum(-1,0))

2.Your task is to write a function that takes a string and return a new string with all vowels removed.

Example:
I/P: "This website is for losers LOL!".
O/P: "Ths wbst s fr lsrs LL!".

s=input()
s1=list(s)

vowel=['a','e','i','o','u']
for x in s1:
    if x in vowel:
        s1.remove(x)

print("".join(s1))


3.An isogram is a word that has no repeating letters, consecutive or non-consecutive. 
Implement a function that determines whether a string that contains only letters is an isogram. Assume the empty string is an isogram. Ignore letter case.
is_isogram("Dermatoglyphics" ) == true
is_isogram("aba" ) == false
is_isogram("moOse" ) == false # -- ignore letter case
ans:3
s1 = input("Enter the string: ")
a=len(s1)

b=len(set(s1))
if a==b:
    print("True")
else:
    print("False")



4.Reverse a list without using inbuilt function.

I/P: list1 = [5,8,4,1,0]
O/P: [0,1,4,8,5]
ans :4
list = [5, 8, 4, 1, 0]
i = len(list)-1
list2 = []
while i>=0:
    list2.append(list[i])
    i -= 1
print(list2)


5.Remove First and Last Character
Your goal is to create a function that removes the first and last characters of a string. You're given one parameter, the original 
You don't have to worry with strings with less than two characters.
ans :5
def fun(s):
    l = list(s)
    l.remove(l[0])
    l.remove(l[-1])

    print(''.join(l))
fun("EktaMadhwani")

o/p=ktaMadhwan

6.Write a function last that accepts a list and returns the last element in the list.
If the list is empty: Return an empty option
ans :6'
def fun(list):
    print(list[len(list)-1])

fun([2, 3, 4, 5, 6])

o/p=6


7.Vowel Count

Return the number (count) of vowels in the given string.
The input string will only consist of lower case letters and/or spaces.
ans 7:
s = input("Enter the string: ")
count = 0
vowels = set("aeiou")
for i in s:
    if i in vowels:
        count += 1
print(count)

i/p=Enter the string: "EktaMadhwani"
o/p=4

8.Find divisors of a number
Find the number of divisors of a positive integer n.

Random tests go up to n = 500000.

Examples
divisors(4)  = 3  # 1, 2, 4
divisors(5)  = 2  # 1, 5
divisors(12) = 6  # 1, 2, 3, 4, 6, 12
divisors(30) = 8  # 1, 2, 3, 5, 6, 10, 15, 30

ans :8
n = int(input("Enter the number: "))
count = 0

for i in range(1, n+1):
    if n%i == 0:
        print(i)
        count += 1
print(i)
print(count)


9.Find Duplicate

Find (any) duplicate in an (integer) array A.

Given A = [2, 3, 4, 1, 3]
# duplicate(A) = 3

ans :9
A = [2, 3, 4, 1, 3]

for x in range(len(A)):
    for y in range(x,len(A)-1):
        if A[x]==A[y+1]:
            print(A[x])

10.Counting Duplicates
Count the number of Duplicates
Write a function that will return the count of distinct case-insensitive alphabetic characters and numeric digits that occur more than once in the input string. The input string can be assumed to contain only alphabets (both uppercase and lowercase) and numeric digits.

Example
"abcde" -> 0 # no characters repeats more than once
"aabbcde" -> 2 # 'a' and 'b'
"indivisibility" -> 1 # 'i' occurs six times
ans :10
s=input("Enter the Some String:")
d={}
for x in s:
    if x in d.keys():
        d[x]=d[x]+1
    else:
        d[x]=1
for i,j in d.items():
    if j>1:
        print(i,j)

11.Regex validate PIN code
ATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain anything but exactly 4 digits or exactly 6 digits.

If the function is passed a valid PIN string, return true, else return false.

eg:

validate_pin("1234") == True
validate_pin("12345") == False
validate_pin("a234") == False

import re

n = input("Enter the pin: ")
m = re.fullmatch("[0-9]{4}|[0-9]{6}", n)

if m!=None:
  print(True)

else:
  print(False)


        

12.Is a number prime?
Define a function that takes an integer argument and returns logical value true or false depending on if the integer is a prime.

ans :12
def check(n, div = None):
    if div is None:
        div = n - 1
    while div >= 2:
        if n % div == 0:
            print(False)
            return
        else:
            return check(n, div-1)
    else:
        print("True")
        return
n=int(input("Enter number: "))
check(n)

i/p=Enter number: 5
o/p=True

13.Reverse the bits in an integer
Write a function that reverses the bits in an integer.

For example, the number 417 is 110100001 in binary. Reversing the binary is 100001011 which is 267.
ans :13
n = int(input("Enter the number: "))
print(bin(n))
rev = 0
while n>0:
    mod = n%10
    rev = rev * 10 + mod
    n = n//10

print(rev)
print(bin(rev))

i/p=Enter the number: 110100001
o/p=100001011

or:
f=lambda n:int(bin(n)[:1:-1],2)
print f(10)
i/p=417
o/p=267
or:

a=int(input("Enter the number: "))
b=bin(a)
print(b)
l=list(b)
m=l[2:]

rs="".join(m[::-1])
rb='0b'+rs
print(rb)
print(eval(rb))
                

    
14.Simple validation of a username with regex

Write a simple regex to validate a username. Allowed characters are:

lowercase letters, 
numbers,
underscore
Length should be between 4 and 16 characters (both included).
ans :14
import re

s = input("Enter the Mail id: ")

m = re.fullmatch("\w[a-zA-Z0-9_.]*@gmail[.]com", s)

if m!= None:
    print("Valid EmailId")

else:
    print("Invalid EmailId")


15. Program to print the diamond shape
Given a number n, write a program to print a diamond shape with 2n rows.
Given Number: 5   
ans :15
n = int(input("Enter a number:"))
for i in range(1, n+1):
    print(" "*(n-i), end= "")
    for j in range(1, i+1):
        print("*", end= " ")
    print()
for k in range(1, n):
    print(" "*k, end="")
    for l in range(1, n+1-k):
        print("*", end= " ")
    print()
i/p:=5
o/p:

        *
       * *
      * * *
     * * * *
    * * * * *
    * * * * *
     * * * *
      * * *
       * *
        *

